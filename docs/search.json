[{"path":"https://noah-padgett.github.io/recmetrics/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"R. Noah Padgett. Author, maintainer, copyright holder.","code":""},{"path":"https://noah-padgett.github.io/recmetrics/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"VanderWeele, T.J., Padgett, R.N. (2023). “Novel Psychometric Indicator Assessments: Relative Excess Correlation Associated Matrices.”","code":"@Misc{,   title = {Novel Psychometric Indicator Assessments: The Relative Excess Correlation and Associated Matrices},   author = {{VanderWeele} and {T.J.} and {Padgett} and {R.N.}},   journal = {ArXiv},   year = {2023}, }"},{"path":"https://noah-padgett.github.io/recmetrics/index.html","id":"recmetrics","dir":"","previous_headings":"","what":"Psychometric Evaluation Using Relative Excess Correlations","title":"Psychometric Evaluation Using Relative Excess Correlations","text":"goal recmetrics provide users ability conduct psychometric evaluation without relying assumptions latent variable structure following work VanderWeele Padgett (preprint).","code":""},{"path":"https://noah-padgett.github.io/recmetrics/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Psychometric Evaluation Using Relative Excess Correlations","text":"can install development version recmetrics GitHub :","code":"install.packages(\"recmetrics\") # install.packages(\"devtools\") devtools::install_github(\"noah-padgett/recmetrics\")"},{"path":"https://noah-padgett.github.io/recmetrics/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Psychometric Evaluation Using Relative Excess Correlations","text":"basic example shows provide evaluation interval structure set items survey similar confirmatory factor analysis. Using prior groups items domain, can construct pattern matrix relative excess correlations.","code":"library(recmetrics)  # Use the SCWB data example domain_goodrel <- c(\"cwbcloserel\", \"cwbrespect\", \"cwbtrust\", \"cwbmutuality\") domain_prolead <- c(\"cwbbeneficence\", \"cwbintegrity\", \"cwbcompetence\", \"cwbvision\") domain_healthyprac <- c(\"cwbrelgrowth\", \"cwbfairness\", \"cwbsustenance\", \"cwbachieve\") domain_satcomm <- c(\"cwbsatisf\", \"cwbvalue\", \"cwbbelonging\", \"cwbwelcome\") domain_strongmiss <- c(\"cwbpurpose\", \"cwbcontrib\", \"cwbinterconn\", \"cwbsynergy\") mylist <- list(   domain_goodrel,   domain_prolead,   domain_healthyprac,   domain_satcomm,   domain_strongmiss ) rec.pattern.matrix(SCWB, mylist) #>              Item     Domain1     Domain2     Domain3      Domain4 #> 1     cwbcloserel  0.16350864 -0.06530359 -0.05772553  0.047124129 #> 2      cwbrespect  0.20341777 -0.06832657 -0.06991176  0.057950739 #> 3        cwbtrust  0.22372552 -0.07130038 -0.04274413  0.047865281 #> 4    cwbmutuality  0.17258900 -0.05945567 -0.05670289  0.026732625 #> 5  cwbbeneficence -0.05341869  0.17633337  0.03712734 -0.060675160 #> 6    cwbintegrity -0.05785968  0.18528117  0.02152480 -0.056452884 #> 7   cwbcompetence -0.08235693  0.17883536  0.03139963 -0.041153557 #> 8       cwbvision -0.07075092  0.16842651  0.05037093 -0.061091257 #> 9    cwbrelgrowth -0.05823066  0.04050846  0.08350449 -0.054257648 #> 10    cwbfairness -0.04045646  0.04233389  0.09669485 -0.013165893 #> 11  cwbsustenance -0.06047999  0.01734252  0.12713391 -0.033705653 #> 12     cwbachieve -0.06791720  0.04023782  0.12149053 -0.050223390 #> 13      cwbsatisf  0.09032956 -0.06816411 -0.02045509  0.095829392 #> 14       cwbvalue  0.01251991 -0.07083475 -0.03511407  0.073925015 #> 15   cwbbelonging  0.03250483 -0.02942976 -0.03862983  0.076485998 #> 16     cwbwelcome  0.04431847 -0.05094424 -0.05715359  0.103403657 #> 17     cwbpurpose -0.02315045 -0.05192892 -0.02970909  0.092440499 #> 18     cwbcontrib -0.06956462 -0.03002393  0.01166753  0.008818949 #> 19   cwbinterconn -0.05909613 -0.04530498 -0.02006557 -0.072725619 #> 20     cwbsynergy -0.10818321 -0.03377517 -0.01127452 -0.081058059 #>          Domain5 #> 1  -0.0552519881 #> 2  -0.0668988806 #> 3  -0.0990423663 #> 4  -0.0388011694 #> 5  -0.0475080610 #> 6  -0.0393667108 #> 7  -0.0329072571 #> 8  -0.0412509643 #> 9   0.0112924011 #> 10 -0.0498391659 #> 11 -0.0110588242 #> 12  0.0002239403 #> 13 -0.0702504693 #> 14  0.0355899295 #> 15 -0.0105548333 #> 16 -0.0073088567 #> 17  0.0265347085 #> 18  0.1095879704 #> 19  0.2120181880 #> 20  0.2413640001"},{"path":"https://noah-padgett.github.io/recmetrics/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 recmetrics authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://noah-padgett.github.io/recmetrics/reference/append_observed_residuals.html","id":null,"dir":"Reference","previous_headings":"","what":"Append Observed Correlations to Data — append_observed_residuals","title":"Append Observed Correlations to Data — append_observed_residuals","text":"Compute observed residuals variables data appends newly created variables original dataset.","code":""},{"path":"https://noah-padgett.github.io/recmetrics/reference/append_observed_residuals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Append Observed Correlations to Data — append_observed_residuals","text":"","code":"append_observed_residuals(data, na.rm = T)"},{"path":"https://noah-padgett.github.io/recmetrics/reference/append_observed_residuals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Append Observed Correlations to Data — append_observed_residuals","text":"data data.frame tibble na.rm logical (defaults TRUE)","code":""},{"path":"https://noah-padgett.github.io/recmetrics/reference/append_observed_residuals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Append Observed Correlations to Data — append_observed_residuals","text":"numeric matrix correlations among variable residuals.","code":""},{"path":"https://noah-padgett.github.io/recmetrics/reference/append_observed_residuals.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Append Observed Correlations to Data — append_observed_residuals","text":"","code":"{   # Use the SCWB data example   data(SCWB)   append_observed_residuals(SCWB[, 1:20]) } #> # A tibble: 453 × 40 #>    cwbcloserel cwbrespect cwbtrust cwbmutuality cwbbeneficence cwbintegrity #>          <dbl>      <dbl>    <dbl>        <dbl>          <dbl>        <dbl> #>  1           3          3        3            3              2            3 #>  2           4          4        5            5              5            3 #>  3           2          2        1            2              3            2 #>  4           5          4        4            4              4            5 #>  5           4          4        6            6              3            4 #>  6           4          1        2            5              1            5 #>  7           6          5        5            5              5            6 #>  8           2          2        2            3              4            4 #>  9           3          2        2            3              4            3 #> 10           3          2        2            2              5            5 #> # ℹ 443 more rows #> # ℹ 34 more variables: cwbcompetence <dbl>, cwbvision <dbl>, #> #   cwbrelgrowth <dbl>, cwbfairness <dbl>, cwbsustenance <dbl>, #> #   cwbachieve <dbl>, cwbsatisf <dbl>, cwbvalue <dbl>, cwbbelonging <dbl>, #> #   cwbwelcome <dbl>, cwbpurpose <dbl>, cwbcontrib <dbl>, cwbinterconn <dbl>, #> #   cwbsynergy <dbl>, resid_cwbcloserel <dbl>, resid_cwbrespect <dbl>, #> #   resid_cwbtrust <dbl>, resid_cwbmutuality <dbl>, …"},{"path":"https://noah-padgett.github.io/recmetrics/reference/cor.orc.html","id":null,"dir":"Reference","previous_headings":"","what":"Observed Residual Correlations — cor.orc","title":"Observed Residual Correlations — cor.orc","text":"Compute observed residual correlation (ORC) matrix among observed residuals variables supplied data.","code":""},{"path":"https://noah-padgett.github.io/recmetrics/reference/cor.orc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Observed Residual Correlations — cor.orc","text":"","code":"cor.orc(data, na.rm = TRUE)"},{"path":"https://noah-padgett.github.io/recmetrics/reference/cor.orc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Observed Residual Correlations — cor.orc","text":"data data.frame tibble na.rm logical (defaults TRUE)","code":""},{"path":"https://noah-padgett.github.io/recmetrics/reference/cor.orc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Observed Residual Correlations — cor.orc","text":"numeric matrix correlations among variable residuals.","code":""},{"path":[]},{"path":"https://noah-padgett.github.io/recmetrics/reference/cor.orc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Observed Residual Correlations — cor.orc","text":"","code":"{   # Use the SCWB data example   data(SCWB)   cor.orc(SCWB[, 1:20]) } #>                cwbcloserel  cwbrespect    cwbtrust cwbmutuality cwbbeneficence #> cwbcloserel     1.00000000  0.34938509  0.33760717   0.21878773    -0.13219867 #> cwbrespect      0.34938509  1.00000000  0.61119134   0.34895640    -0.23063890 #> cwbtrust        0.33760717  0.61119134  1.00000000   0.48394767    -0.20433241 #> cwbmutuality    0.21878773  0.34895640  0.48394767   1.00000000    -0.17713110 #> cwbbeneficence -0.13219867 -0.23063890 -0.20433241  -0.17713110     1.00000000 #> cwbintegrity   -0.22916644 -0.18690198 -0.21420376  -0.12570184     0.55275841 #> cwbcompetence  -0.21739928 -0.21703332 -0.27232038  -0.31143897     0.40004886 #> cwbvision      -0.23718551 -0.25548909 -0.21671191  -0.17536458     0.32491711 #> cwbrelgrowth   -0.06440115 -0.33740145 -0.22687309  -0.20483424     0.11181868 #> cwbfairness    -0.24111277 -0.08864187 -0.06698099  -0.20040239     0.11470784 #> cwbsustenance  -0.20787281 -0.22967637 -0.16488715  -0.20916777    -0.02158010 #> cwbachieve     -0.25170796 -0.28735243 -0.19155889  -0.16523941     0.02940253 #> cwbsatisf       0.10480985  0.13039040  0.26380393   0.15760874    -0.21449794 #> cwbvalue        0.01136611 -0.01502676 -0.09584566  -0.03427485    -0.22066690 #> cwbbelonging    0.03445978  0.09657238  0.02132319  -0.02140552    -0.15250973 #> cwbwelcome      0.03364147  0.17908722  0.07933698  -0.06320585    -0.21884273 #> cwbpurpose     -0.16219953 -0.02447223 -0.13812773  -0.12204953    -0.25879705 #> cwbcontrib     -0.21868624 -0.21569172 -0.30186536  -0.15294200    -0.09794858 #> cwbinterconn   -0.11499966 -0.22284091 -0.28002490  -0.12393610    -0.13239686 #> cwbsynergy     -0.19693994 -0.34141576 -0.36550395  -0.17933640    -0.12839940 #>                cwbintegrity cwbcompetence    cwbvision cwbrelgrowth #> cwbcloserel     -0.22916644   -0.21739928 -0.237185513  -0.06440115 #> cwbrespect      -0.18690198   -0.21703332 -0.255489090  -0.33740145 #> cwbtrust        -0.21420376   -0.27232038 -0.216711911  -0.22687309 #> cwbmutuality    -0.12570184   -0.31143897 -0.175364585  -0.20483424 #> cwbbeneficence   0.55275841    0.40004886  0.324917112   0.11181868 #> cwbintegrity     1.00000000    0.42279445  0.366802442  -0.04223814 #> cwbcompetence    0.42279445    1.00000000  0.487940171  -0.01196226 #> cwbvision        0.36680244    0.48794017  1.000000000   0.13840066 #> cwbrelgrowth    -0.04223814   -0.01196226  0.138400663   1.00000000 #> cwbfairness      0.07546242    0.02526758  0.106220305   0.20799557 #> cwbsustenance   -0.01829604    0.07035230  0.001195528   0.14341055 #> cwbachieve       0.06505630    0.10882617  0.117292467   0.15226103 #> cwbsatisf       -0.20056320   -0.22492332 -0.217316738  -0.19512688 #> cwbvalue        -0.23503461   -0.16874681 -0.240227670  -0.17480510 #> cwbbelonging    -0.11693135   -0.09555187 -0.122287927  -0.15206475 #> cwbwelcome      -0.18172679   -0.09713717 -0.200611524  -0.25145246 #> cwbpurpose      -0.11229485   -0.13722157 -0.205187904  -0.15072011 #> cwbcontrib      -0.06403196   -0.13142515 -0.165759556   0.03950039 #> cwbinterconn    -0.19676934   -0.11277128 -0.108253911   0.02190081 #> cwbsynergy      -0.15680954   -0.11808764 -0.090453752   0.07758612 #>                 cwbfairness cwbsustenance  cwbachieve   cwbsatisf     cwbvalue #> cwbcloserel    -0.241112766  -0.207872805 -0.25170796  0.10480985  0.011366112 #> cwbrespect     -0.088641866  -0.229676374 -0.28735243  0.13039040 -0.015026757 #> cwbtrust       -0.066980989  -0.164887148 -0.19155889  0.26380393 -0.095845661 #> cwbmutuality   -0.200402386  -0.209167767 -0.16523941  0.15760874 -0.034274852 #> cwbbeneficence  0.114707840  -0.021580099  0.02940253 -0.21449794 -0.220666901 #> cwbintegrity    0.075462418  -0.018296044  0.06505630 -0.20056320 -0.235034606 #> cwbcompetence   0.025267576   0.070352304  0.10882617 -0.22492332 -0.168746814 #> cwbvision       0.106220305   0.001195528  0.11729247 -0.21731674 -0.240227670 #> cwbrelgrowth    0.207995566   0.143410546  0.15226103 -0.19512688 -0.174805097 #> cwbfairness     1.000000000   0.245537211  0.21826551 -0.05409774 -0.145593918 #> cwbsustenance   0.245537211   1.000000000  0.53699249 -0.03533192 -0.073696803 #> cwbachieve      0.218265512   0.536992489  1.00000000 -0.11923641 -0.125493775 #> cwbsatisf      -0.054097738  -0.035331924 -0.11923641  1.00000000  0.296708201 #> cwbvalue       -0.145593918  -0.073696803 -0.12549378  0.29670820  1.000000000 #> cwbbelonging    0.002931682  -0.225158405 -0.24626435  0.07916789 -0.009156769 #> cwbwelcome     -0.102902364  -0.212148910 -0.22686084  0.18112827  0.076619660 #> cwbpurpose     -0.150164286  -0.091096705 -0.09649848  0.09489558  0.088071010 #> cwbcontrib     -0.098319890  -0.038366524  0.07313495 -0.10568702  0.072908902 #> cwbinterconn   -0.156041370  -0.064242189 -0.09798160 -0.37316840 -0.066494261 #> cwbsynergy     -0.212101119  -0.063483089 -0.03034496 -0.36712806 -0.001372632 #>                cwbbelonging   cwbwelcome  cwbpurpose   cwbcontrib cwbinterconn #> cwbcloserel     0.034459775  0.033641473 -0.16219953 -0.218686235  -0.11499966 #> cwbrespect      0.096572376  0.179087225 -0.02447223 -0.215691724  -0.22284091 #> cwbtrust        0.021323194  0.079336978 -0.13812773 -0.301865362  -0.28002490 #> cwbmutuality   -0.021405522 -0.063205845 -0.12204953 -0.152941998  -0.12393610 #> cwbbeneficence -0.152509726 -0.218842735 -0.25879705 -0.097948580  -0.13239686 #> cwbintegrity   -0.116931347 -0.181726795 -0.11229485 -0.064031961  -0.19676934 #> cwbcompetence  -0.095551874 -0.097137166 -0.13722157 -0.131425149  -0.11277128 #> cwbvision      -0.122287927 -0.200611524 -0.20518790 -0.165759556  -0.10825391 #> cwbrelgrowth   -0.152064746 -0.251452457 -0.15072011  0.039500390   0.02190081 #> cwbfairness     0.002931682 -0.102902364 -0.15016429 -0.098319890  -0.15604137 #> cwbsustenance  -0.225158405 -0.212148910 -0.09109671 -0.038366524  -0.06424219 #> cwbachieve     -0.246264348 -0.226860835 -0.09649848  0.073134950  -0.09798160 #> cwbsatisf       0.079167894  0.181128270  0.09489558 -0.105687020  -0.37316840 #> cwbvalue       -0.009156769  0.076619660  0.08807101  0.072908902  -0.06649426 #> cwbbelonging    1.000000000  0.409852801  0.23544925 -0.078426569  -0.13078798 #> cwbwelcome      0.409852801  1.000000000  0.35651544 -0.009625186  -0.23773738 #> cwbpurpose      0.235449248  0.356515439  1.00000000  0.129208938  -0.04332074 #> cwbcontrib     -0.078426569 -0.009625186  0.12920894  1.000000000   0.13699792 #> cwbinterconn   -0.130787979 -0.237737380 -0.04332074  0.136997916   1.00000000 #> cwbsynergy     -0.246234969 -0.272653043 -0.03506969  0.249679020   0.64636567 #>                  cwbsynergy #> cwbcloserel    -0.196939941 #> cwbrespect     -0.341415764 #> cwbtrust       -0.365503949 #> cwbmutuality   -0.179336397 #> cwbbeneficence -0.128399395 #> cwbintegrity   -0.156809541 #> cwbcompetence  -0.118087638 #> cwbvision      -0.090453752 #> cwbrelgrowth    0.077586121 #> cwbfairness    -0.212101119 #> cwbsustenance  -0.063483089 #> cwbachieve     -0.030344965 #> cwbsatisf      -0.367128063 #> cwbvalue       -0.001372632 #> cwbbelonging   -0.246234969 #> cwbwelcome     -0.272653043 #> cwbpurpose     -0.035069693 #> cwbcontrib      0.249679020 #> cwbinterconn    0.646365673 #> cwbsynergy      1.000000000"},{"path":"https://noah-padgett.github.io/recmetrics/reference/cor.rec.html","id":null,"dir":"Reference","previous_headings":"","what":"Relative Excess Correlations — cor.rec","title":"Relative Excess Correlations — cor.rec","text":"Compute relative excess correlation (REC) matrix among variables supplied data.","code":""},{"path":"https://noah-padgett.github.io/recmetrics/reference/cor.rec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Relative Excess Correlations — cor.rec","text":"","code":"cor.rec(data, na.rm = TRUE)"},{"path":"https://noah-padgett.github.io/recmetrics/reference/cor.rec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Relative Excess Correlations — cor.rec","text":"data data.frame tibble na.rm logical (defaults TRUE)","code":""},{"path":"https://noah-padgett.github.io/recmetrics/reference/cor.rec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Relative Excess Correlations — cor.rec","text":"numeric matrix correlations among variable residuals.","code":""},{"path":[]},{"path":"https://noah-padgett.github.io/recmetrics/reference/cor.rec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Relative Excess Correlations — cor.rec","text":"","code":"{   # Use the SCWB data example   data(SCWB)   cor.rec(SCWB[, 1:20]) } #>                cwbcloserel  cwbrespect     cwbtrust cwbmutuality cwbbeneficence #> cwbcloserel             NA  0.18073167  0.181036290  0.128757950   -0.033558630 #> cwbrespect      0.18073167          NA  0.265326415  0.164195215   -0.069290357 #> cwbtrust        0.18103629  0.26532641           NA  0.224813844   -0.060540076 #> cwbmutuality    0.12875795  0.16419521  0.224813844           NA   -0.050285682 #> cwbbeneficence -0.03355863 -0.06929036 -0.060540076 -0.050285682             NA #> cwbintegrity   -0.07620376 -0.05581421 -0.067720587 -0.031700160    0.224444683 #> cwbcompetence  -0.07036184 -0.06597000 -0.088914827 -0.104181036    0.162244260 #> cwbvision      -0.08109012 -0.08223170 -0.068026042 -0.051655805    0.142311178 #> cwbrelgrowth   -0.00292000 -0.10696912 -0.063358111 -0.059675426    0.064257537 #> cwbfairness    -0.07844122 -0.01628002 -0.008400548 -0.058704066    0.055111907 #> cwbsustenance  -0.06658582 -0.06814305 -0.044192277 -0.062998808    0.006590851 #> cwbachieve     -0.08295510 -0.08825484 -0.055025582 -0.045433276    0.022549060 #> cwbsatisf       0.07508748  0.07081599  0.127847914  0.087566865   -0.066265925 #> cwbvalue        0.03523079  0.01871438 -0.014802415  0.010936904   -0.071477846 #> cwbbelonging    0.03747615  0.05376127  0.026829446  0.011952439   -0.039030408 #> cwbwelcome      0.04070210  0.08851133  0.051586180 -0.003525708   -0.065926461 #> cwbpurpose     -0.04501819  0.01166026 -0.032471944 -0.026771913   -0.080851691 #> cwbcontrib     -0.07395882 -0.06306342 -0.099986233 -0.041250019   -0.022975372 #> cwbinterconn   -0.02414723 -0.07593269 -0.106905869 -0.029398730   -0.044736028 #> cwbsynergy     -0.07788371 -0.14025968 -0.156805420 -0.057784016   -0.041469153 #>                cwbintegrity cwbcompetence   cwbvision cwbrelgrowth  cwbfairness #> cwbcloserel    -0.076203758   -0.07036184 -0.08109012 -0.002920000 -0.078441220 #> cwbrespect     -0.055814213   -0.06597000 -0.08223170 -0.106969119 -0.016280018 #> cwbtrust       -0.067720587   -0.08891483 -0.06802604 -0.063358111 -0.008400548 #> cwbmutuality   -0.031700160   -0.10418104 -0.05165580 -0.059675426 -0.058704066 #> cwbbeneficence  0.224444683    0.16224426  0.14231118  0.064257537  0.055111907 #> cwbintegrity             NA    0.17134616  0.16005268  0.004706908  0.039740228 #> cwbcompetence   0.171346155            NA  0.20291568  0.015860877  0.020811767 #> cwbvision       0.160052675    0.20291568          NA  0.077208534  0.053671653 #> cwbrelgrowth    0.004706908    0.01586088  0.07720853           NA  0.101000310 #> cwbfairness     0.039740228    0.02081177  0.05367165  0.101000310           NA #> cwbsustenance   0.007395523    0.04004860  0.01533510  0.074508482  0.103255292 #> cwbachieve      0.034256528    0.04887729  0.05526843  0.075004675  0.085828963 #> cwbsatisf      -0.064116051   -0.07226581 -0.07000867 -0.051432628 -0.005433855 #> cwbvalue       -0.078609579   -0.05059888 -0.08265270 -0.055345493 -0.040063789 #> cwbbelonging   -0.028555095   -0.02015017 -0.02998335 -0.034544091  0.015428760 #> cwbwelcome     -0.054530809   -0.02159937 -0.06172030 -0.075708380 -0.022594686 #> cwbpurpose     -0.027081322   -0.03593021 -0.06385244 -0.040918560 -0.039119773 #> cwbcontrib     -0.009047481   -0.03583707 -0.05223578  0.029233311 -0.022057209 #> cwbinterconn   -0.073680536   -0.03173509 -0.03106827  0.018148165 -0.054631847 #> cwbsynergy     -0.047657505   -0.02812665 -0.01784737  0.038706688 -0.083547835 #>                cwbsustenance  cwbachieve    cwbsatisf     cwbvalue cwbbelonging #> cwbcloserel    -0.0665858164 -0.08295510  0.075087475  0.035230787   0.03747615 #> cwbrespect     -0.0681430475 -0.08825484  0.070815986  0.018714376   0.05376127 #> cwbtrust       -0.0441922765 -0.05502558  0.127847914 -0.014802415   0.02682945 #> cwbmutuality   -0.0629988075 -0.04543328  0.087566865  0.010936904   0.01195244 #> cwbbeneficence  0.0065908514  0.02254906 -0.066265925 -0.071477846  -0.03903041 #> cwbintegrity    0.0073955226  0.03425653 -0.064116051 -0.078609579  -0.02855510 #> cwbcompetence   0.0400485965  0.04887729 -0.072265812 -0.050598884  -0.02015017 #> cwbvision       0.0153351040  0.05526843 -0.070008671 -0.082652699  -0.02998335 #> cwbrelgrowth    0.0745084822  0.07500467 -0.051432628 -0.055345493  -0.03454409 #> cwbfairness     0.1032552916  0.08582896 -0.005433855 -0.040063789   0.01542876 #> cwbsustenance             NA  0.20363794  0.005058512 -0.011832322  -0.06501328 #> cwbachieve      0.2036379431          NA -0.030012382 -0.033214676  -0.07039073 #> cwbsatisf       0.0050585119 -0.03001238           NA  0.151164173   0.04657940 #> cwbvalue       -0.0118323225 -0.03321468  0.151164173           NA   0.01651155 #> cwbbelonging   -0.0650132801 -0.07039073  0.046579397  0.016511551           NA #> cwbwelcome     -0.0630355227 -0.06727577  0.089744607  0.054099320   0.16636705 #> cwbpurpose     -0.0182942013 -0.02050381  0.056919605  0.056281719   0.10258965 #> cwbcontrib     -0.0008126692  0.04030669 -0.020718027  0.050776235  -0.01128086 #> cwbinterconn   -0.0134631414 -0.03031546 -0.158784248 -0.004620176  -0.03745741 #> cwbsynergy     -0.0116652850  0.01140834 -0.158419207  0.039921940  -0.09607071 #>                  cwbwelcome   cwbpurpose    cwbcontrib cwbinterconn  cwbsynergy #> cwbcloserel     0.040702098 -0.045018192 -0.0739588226 -0.024147227 -0.07788371 #> cwbrespect      0.088511328  0.011660261 -0.0630634190 -0.075932687 -0.14025968 #> cwbtrust        0.051586180 -0.032471944 -0.0999862330 -0.106905869 -0.15680542 #> cwbmutuality   -0.003525708 -0.026771913 -0.0412500188 -0.029398730 -0.05778402 #> cwbbeneficence -0.065926461 -0.080851691 -0.0229753724 -0.044736028 -0.04146915 #> cwbintegrity   -0.054530809 -0.027081322 -0.0090474807 -0.073680536 -0.04765750 #> cwbcompetence  -0.021599366 -0.035930214 -0.0358370724 -0.031735089 -0.02812665 #> cwbvision      -0.061720304 -0.063852439 -0.0522357828 -0.031068266 -0.01784737 #> cwbrelgrowth   -0.075708380 -0.040918560  0.0292333112  0.018148165  0.03870669 #> cwbfairness    -0.022594686 -0.039119773 -0.0220572087 -0.054631847 -0.08354783 #> cwbsustenance  -0.063035523 -0.018294201 -0.0008126692 -0.013463141 -0.01166529 #> cwbachieve     -0.067275775 -0.020503806  0.0403066863 -0.030315460  0.01140834 #> cwbsatisf       0.089744607  0.056919605 -0.0207180274 -0.158784248 -0.15841921 #> cwbvalue        0.054099320  0.056281719  0.0507762347 -0.004620176  0.03992194 #> cwbbelonging    0.166367045  0.102589653 -0.0112808636 -0.037457408 -0.09607071 #> cwbwelcome               NA  0.153971019  0.0164984538 -0.090040643 -0.10966426 #> cwbpurpose      0.153971019           NA  0.0675525487  0.001042616  0.01100896 #> cwbcontrib      0.016498454  0.067552549            NA  0.091570135  0.16964123 #> cwbinterconn   -0.090040643  0.001042616  0.0915701350           NA  0.54344181 #> cwbsynergy     -0.109664257  0.011008960  0.1696412274  0.543441813          NA"},{"path":"https://noah-padgett.github.io/recmetrics/reference/cor.rowMeans.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute rowMeans of a correlation matrix — cor.rowMeans","title":"Compute rowMeans of a correlation matrix — cor.rowMeans","text":"wrapper computing mean rows correlation matrix.","code":""},{"path":"https://noah-padgett.github.io/recmetrics/reference/cor.rowMeans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute rowMeans of a correlation matrix — cor.rowMeans","text":"","code":"cor.rowMeans(x, na.rm = TRUE)"},{"path":"https://noah-padgett.github.io/recmetrics/reference/cor.rowMeans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute rowMeans of a correlation matrix — cor.rowMeans","text":"x correlations na.rm logical (defaults TRUE)","code":""},{"path":"https://noah-padgett.github.io/recmetrics/reference/cor.rowMeans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute rowMeans of a correlation matrix — cor.rowMeans","text":"numeric vector correlation means.","code":""},{"path":"https://noah-padgett.github.io/recmetrics/reference/cor.rowMeans.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute rowMeans of a correlation matrix — cor.rowMeans","text":"","code":"{   # Use the SCWB data example   data(SCWB)   mycor <- cor(SCWB)   cor.rowMeans(mycor) } #>       cwbcloserel        cwbrespect          cwbtrust      cwbmutuality  #>               NaN               NaN               NaN               NaN  #>    cwbbeneficence      cwbintegrity     cwbcompetence         cwbvision  #>               NaN               NaN               NaN               NaN  #>      cwbrelgrowth       cwbfairness     cwbsustenance        cwbachieve  #>               NaN               NaN               NaN               NaN  #>         cwbsatisf          cwbvalue      cwbbelonging        cwbwelcome  #>               NaN               NaN               NaN               NaN  #>        cwbpurpose        cwbcontrib      cwbinterconn        cwbsynergy  #>               NaN               NaN               NaN               NaN  #>     total_goodrel     total_prolead total_healthyprac     total_satcomm  #>         0.6599330         0.6719363         0.7062158         0.7036671  #>  total_strongmiss  #>         0.6313508"},{"path":"https://noah-padgett.github.io/recmetrics/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::[\\%>\\%][magrittr::pipe] details.","code":""},{"path":"https://noah-padgett.github.io/recmetrics/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://noah-padgett.github.io/recmetrics/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://noah-padgett.github.io/recmetrics/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://noah-padgett.github.io/recmetrics/reference/rec.average.html","id":null,"dir":"Reference","previous_headings":"","what":"REC Metric 1 — rec.average","title":"REC Metric 1 — rec.average","text":"average absolute values C-REC matrix entries (essentially much relative excess correlation still distribute across groupings)","code":""},{"path":"https://noah-padgett.github.io/recmetrics/reference/rec.average.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"REC Metric 1 — rec.average","text":"","code":"rec.average(data, na.rm = TRUE)"},{"path":"https://noah-padgett.github.io/recmetrics/reference/rec.average.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"REC Metric 1 — rec.average","text":"data data.frame tibble  (required) na.rm logical (defaults TRUE)","code":""},{"path":"https://noah-padgett.github.io/recmetrics/reference/rec.average.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"REC Metric 1 — rec.average","text":"single numerical value","code":""},{"path":[]},{"path":"https://noah-padgett.github.io/recmetrics/reference/rec.average.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"REC Metric 1 — rec.average","text":"","code":"{   # Use the SCWB data example   # Metric 1 - item scores   rec.average(SCWB[, 1:20])   # Metric 4 - domain total scores   my_rec <- rec.average(SCWB[, 21:25])   my_rec   # Metric 4 - averages   mean(abs(my_rec[lower.tri(my_rec)])) } #> [1] NaN"},{"path":"https://noah-padgett.github.io/recmetrics/reference/rec.avg.wb.domains.html","id":null,"dir":"Reference","previous_headings":"","what":"REC Metric 2 — rec.avg.wb.domains","title":"REC Metric 2 — rec.avg.wb.domains","text":"domain , average REC entries within domain vs. average REC entries looking correlations indicators domain D=indicators domains (note include correlations domain j indicators domain j; given domain, basically average REC entries within domain vs. average REC entries entries column domain). might call REC domain coherence domain ","code":""},{"path":"https://noah-padgett.github.io/recmetrics/reference/rec.avg.wb.domains.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"REC Metric 2 — rec.avg.wb.domains","text":"","code":"rec.avg.wb.domains(data, domainlist = NULL, domainnames = NULL, na.rm = TRUE)"},{"path":"https://noah-padgett.github.io/recmetrics/reference/rec.avg.wb.domains.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"REC Metric 2 — rec.avg.wb.domains","text":"data data.frame tibble  (required) domainlist list character vectors numeric vectors denoting columns domain (required) domainnames character vector suppling updated names attached output na.rm logical (defaults TRUE)","code":""},{"path":"https://noah-padgett.github.io/recmetrics/reference/rec.avg.wb.domains.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"REC Metric 2 — rec.avg.wb.domains","text":"single numerical value","code":""},{"path":[]},{"path":"https://noah-padgett.github.io/recmetrics/reference/rec.avg.wb.domains.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"REC Metric 2 — rec.avg.wb.domains","text":"","code":"{   # Use the SCWB data example   domain_goodrel <- c(\"cwbcloserel\", \"cwbrespect\", \"cwbtrust\", \"cwbmutuality\")   domain_prolead <- c(\"cwbbeneficence\", \"cwbintegrity\", \"cwbcompetence\", \"cwbvision\")   domain_healthyprac <- c(\"cwbrelgrowth\", \"cwbfairness\", \"cwbsustenance\", \"cwbachieve\")   domain_satcomm <- c(\"cwbsatisf\", \"cwbvalue\", \"cwbbelonging\", \"cwbwelcome\")   domain_strongmiss <- c(\"cwbpurpose\", \"cwbcontrib\", \"cwbinterconn\", \"cwbsynergy\")   mylist <- list(     domain_goodrel,     domain_prolead,     domain_healthyprac,     domain_satcomm,     domain_strongmiss   )   rec.avg.wb.domains(SCWB, mylist) } #>     Domain Avg_Rec_Within_Domain Avg_REC_Between_Domains #> 1 Domain 1            0.19081023             -0.03573701 #> 2 Domain 2            0.17721910             -0.03152309 #> 3 Domain 3            0.10720594             -0.01796224 #> 4 Domain 4            0.08741102             -0.01522356 #> 5 Domain 5            0.14737622             -0.03268333"},{"path":"https://noah-padgett.github.io/recmetrics/reference/rec.coherence.html","id":null,"dir":"Reference","previous_headings":"","what":"REC Metric 3 — rec.coherence","title":"REC Metric 3 — rec.coherence","text":"average value REC domain coherence taken across domains (, domains number indicators, believe also equal average within-domain REC vs. average cross-domain REC); gives measure coherence partition formed various domains whole","code":""},{"path":"https://noah-padgett.github.io/recmetrics/reference/rec.coherence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"REC Metric 3 — rec.coherence","text":"","code":"rec.coherence(data, domainlist = NULL, domainnames = NULL, na.rm = TRUE)"},{"path":"https://noah-padgett.github.io/recmetrics/reference/rec.coherence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"REC Metric 3 — rec.coherence","text":"data data.frame tibble  (required) domainlist list character vectors numeric vectors denoting columns domain (required) domainnames character vector suppling updated names attached output na.rm logical (defaults TRUE)","code":""},{"path":"https://noah-padgett.github.io/recmetrics/reference/rec.coherence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"REC Metric 3 — rec.coherence","text":"single numerical value","code":""},{"path":[]},{"path":"https://noah-padgett.github.io/recmetrics/reference/rec.coherence.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"REC Metric 3 — rec.coherence","text":"","code":"{   # Use the SCWB data example   domain_goodrel <- c(\"cwbcloserel\", \"cwbrespect\", \"cwbtrust\", \"cwbmutuality\")   domain_prolead <- c(\"cwbbeneficence\", \"cwbintegrity\", \"cwbcompetence\", \"cwbvision\")   domain_healthyprac <- c(\"cwbrelgrowth\", \"cwbfairness\", \"cwbsustenance\", \"cwbachieve\")   domain_satcomm <- c(\"cwbsatisf\", \"cwbvalue\", \"cwbbelonging\", \"cwbwelcome\")   domain_strongmiss <- c(\"cwbpurpose\", \"cwbcontrib\", \"cwbinterconn\", \"cwbsynergy\")   mylist <- list(     domain_goodrel,     domain_prolead,     domain_healthyprac,     domain_satcomm,     domain_strongmiss   )   rec.coherence(SCWB, mylist) } #>                        Metric     Average #> 1   REC Average Within Domain  0.14200450 #> 2 REC Average Between Domains -0.02662584"},{"path":"https://noah-padgett.github.io/recmetrics/reference/rec.pattern.matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"REC Metric 3 — rec.pattern.matrix","title":"REC Metric 3 — rec.pattern.matrix","text":"(Number Items)x(Number Domains) matrix row corresponds indicator, entry column average REC score indicator indicators domain . allow one sense see certain indicators seem higher REC scores domain assigned","code":""},{"path":"https://noah-padgett.github.io/recmetrics/reference/rec.pattern.matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"REC Metric 3 — rec.pattern.matrix","text":"","code":"rec.pattern.matrix(   data,   domainlist = NULL,   domainnames = NULL,   labels = NULL,   na.rm = TRUE )"},{"path":"https://noah-padgett.github.io/recmetrics/reference/rec.pattern.matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"REC Metric 3 — rec.pattern.matrix","text":"data data.frame tibble  (required) domainlist list character vectors numeric vectors denoting columns domain (required) domainnames character vector suppling updated names attached output labels character vector supplying updated variable names attached output na.rm logical (defaults TRUE)","code":""},{"path":"https://noah-padgett.github.io/recmetrics/reference/rec.pattern.matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"REC Metric 3 — rec.pattern.matrix","text":"single numerical value","code":""},{"path":[]},{"path":"https://noah-padgett.github.io/recmetrics/reference/rec.pattern.matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"REC Metric 3 — rec.pattern.matrix","text":"","code":"{   # Use the SCWB data example   domain_goodrel <- c(\"cwbcloserel\", \"cwbrespect\", \"cwbtrust\", \"cwbmutuality\")   domain_prolead <- c(\"cwbbeneficence\", \"cwbintegrity\", \"cwbcompetence\", \"cwbvision\")   domain_healthyprac <- c(\"cwbrelgrowth\", \"cwbfairness\", \"cwbsustenance\", \"cwbachieve\")   domain_satcomm <- c(\"cwbsatisf\", \"cwbvalue\", \"cwbbelonging\", \"cwbwelcome\")   domain_strongmiss <- c(\"cwbpurpose\", \"cwbcontrib\", \"cwbinterconn\", \"cwbsynergy\")   mylist <- list(     domain_goodrel,     domain_prolead,     domain_healthyprac,     domain_satcomm,     domain_strongmiss   )   rec.pattern.matrix(SCWB, mylist) } #>              Item     Domain1     Domain2     Domain3      Domain4 #> 1     cwbcloserel  0.16350864 -0.06530359 -0.05772553  0.047124129 #> 2      cwbrespect  0.20341777 -0.06832657 -0.06991176  0.057950739 #> 3        cwbtrust  0.22372552 -0.07130038 -0.04274413  0.047865281 #> 4    cwbmutuality  0.17258900 -0.05945567 -0.05670289  0.026732625 #> 5  cwbbeneficence -0.05341869  0.17633337  0.03712734 -0.060675160 #> 6    cwbintegrity -0.05785968  0.18528117  0.02152480 -0.056452884 #> 7   cwbcompetence -0.08235693  0.17883536  0.03139963 -0.041153557 #> 8       cwbvision -0.07075092  0.16842651  0.05037093 -0.061091257 #> 9    cwbrelgrowth -0.05823066  0.04050846  0.08350449 -0.054257648 #> 10    cwbfairness -0.04045646  0.04233389  0.09669485 -0.013165893 #> 11  cwbsustenance -0.06047999  0.01734252  0.12713391 -0.033705653 #> 12     cwbachieve -0.06791720  0.04023782  0.12149053 -0.050223390 #> 13      cwbsatisf  0.09032956 -0.06816411 -0.02045509  0.095829392 #> 14       cwbvalue  0.01251991 -0.07083475 -0.03511407  0.073925015 #> 15   cwbbelonging  0.03250483 -0.02942976 -0.03862983  0.076485998 #> 16     cwbwelcome  0.04431847 -0.05094424 -0.05715359  0.103403657 #> 17     cwbpurpose -0.02315045 -0.05192892 -0.02970909  0.092440499 #> 18     cwbcontrib -0.06956462 -0.03002393  0.01166753  0.008818949 #> 19   cwbinterconn -0.05909613 -0.04530498 -0.02006557 -0.072725619 #> 20     cwbsynergy -0.10818321 -0.03377517 -0.01127452 -0.081058059 #>          Domain5 #> 1  -0.0552519881 #> 2  -0.0668988806 #> 3  -0.0990423663 #> 4  -0.0388011694 #> 5  -0.0475080610 #> 6  -0.0393667108 #> 7  -0.0329072571 #> 8  -0.0412509643 #> 9   0.0112924011 #> 10 -0.0498391659 #> 11 -0.0110588242 #> 12  0.0002239403 #> 13 -0.0702504693 #> 14  0.0355899295 #> 15 -0.0105548333 #> 16 -0.0073088567 #> 17  0.0265347085 #> 18  0.1095879704 #> 19  0.2120181880 #> 20  0.2413640001"},{"path":"https://noah-padgett.github.io/recmetrics/reference/recmetrics-package.html","id":null,"dir":"Reference","previous_headings":"","what":"recmetrics: Psychometric Evaluation Using Relative Excess Correlations — recmetrics-package","title":"recmetrics: Psychometric Evaluation Using Relative Excess Correlations — recmetrics-package","text":"recmetrics uses modern results psychometric theory provide users way evaluating internal structure set items guided theory. goal similar confirmatory factor analysis, recmetrics uses novel methods rely assumptions latent variables latent variable structures.","code":""},{"path":"https://noah-padgett.github.io/recmetrics/reference/recmetrics-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"recmetrics: Psychometric Evaluation Using Relative Excess Correlations — recmetrics-package","text":"Maintainer: R. Noah Padgett npadgett@hsph.harvard.edu (ORCID) [copyright holder]","code":""},{"path":"https://noah-padgett.github.io/recmetrics/reference/SCWB.html","id":null,"dir":"Reference","previous_headings":"","what":"Subjective Community Well-Being Dataset (25 Variables) — SCWB","title":"Subjective Community Well-Being Dataset (25 Variables) — SCWB","text":"Subjective Community Well-(SCWB) data random subset full dataset used paper Padgett et al. (press). SCWB dataset contains 501 responses 20 SCWB items plus 5 pre-computed total scores five theorized domains Good Relationships, Proficient Leadership, Healthy Practices, Satisfying Community, Strong Mission.","code":""},{"path":"https://noah-padgett.github.io/recmetrics/reference/SCWB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subjective Community Well-Being Dataset (25 Variables) — SCWB","text":"","code":"data(SCWB)"},{"path":[]},{"path":"https://noah-padgett.github.io/recmetrics/reference/SCWB.html","id":"scwb-a-data-frame-with-observations-of-variables-","dir":"Reference","previous_headings":"","what":"SCWB A data frame with 501 observations of 25 variables.","title":"Subjective Community Well-Being Dataset (25 Variables) — SCWB","text":"cwbcloserel  cwbrespect  cwbtrust  cwbmutuality  cwbbeneficence  cwbintegrity  cwbcompetence  cwbvision  cwbrelgrowth  cwbfairness  cwbsustenance  cwbachieve  cwbsatisf  cwbvalue  cwbbelonging  cwbwelcome  cwbpurpose  cwbcontrib  cwbinterconn  cwbsynergy  total_goodrel Mean items cwbcloserel, cwbrespect, cwbtrust, cwbmutuality total_prolead Mean items cwbbeneficence, cwbintegrity, cwbcompetence, cwbvision total_healthyprac Mean items cwbrelgrowth, cwbfairness, cwbsustenance, cwbachieve total_satcomm Mean items cwbsatisf, cwbvalue, cwbbelonging, cwbwelcome total_strongmiss Mean items cwbpurpose, cwbcontrib, cwbintercon, cwbsynergy","code":""},{"path":"https://noah-padgett.github.io/recmetrics/reference/SCWB.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Subjective Community Well-Being Dataset (25 Variables) — SCWB","text":"Data used Padgett et al. (press).","code":""},{"path":"https://noah-padgett.github.io/recmetrics/reference/SCWB.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Subjective Community Well-Being Dataset (25 Variables) — SCWB","text":"Padgett, R.N., ...","code":""},{"path":"https://noah-padgett.github.io/recmetrics/reference/SCWB.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subjective Community Well-Being Dataset (25 Variables) — SCWB","text":"","code":"# SCWB example used in preprint data(SCWB)"},{"path":"https://noah-padgett.github.io/recmetrics/news/index.html","id":"recmetrics-010","dir":"Changelog","previous_headings":"","what":"recmetrics 0.1.0","title":"recmetrics 0.1.0","text":"Initial CRAN submission.","code":""}]
